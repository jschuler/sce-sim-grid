"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRowColumnFromId = exports.focusCell = exports.setCaretPositionAtEnd = exports.setCaretPosition = void 0;

var setCaretPosition = function setCaretPosition(element, caretPos) {
  // (el.selectionStart === 0 added for Firefox bug)
  if (element.selectionStart || element.selectionStart === 0) {
    element.focus();
    element.setSelectionRange(caretPos, caretPos);
    return true;
  }

  return false;
};

exports.setCaretPosition = setCaretPosition;

var setCaretPositionAtEnd = function setCaretPositionAtEnd(element) {
  var end = element.value.length;
  setCaretPosition(element, end);
};

exports.setCaretPositionAtEnd = setCaretPositionAtEnd;

var focusCell = function focusCell(id) {
  var focusTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var scrollTo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var element = document.getElementById(id);

  if (element) {
    scrollTo && element.scrollIntoView({
      behavior: 'smooth',
      block: 'end',
      inline: 'nearest'
    });
    setTimeout(function () {
      element.focus();
    }, focusTimeout);
  }
};

exports.focusCell = focusCell;

var getRowColumnFromId = function getRowColumnFromId(id) {
  var currentIdArr = id.split(' ');
  var row = Number.parseInt(currentIdArr[1]);
  var column = Number.parseInt(currentIdArr[3]);
  return {
    row: row,
    column: column
  };
};

exports.getRowColumnFromId = getRowColumnFromId;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy91dGlscy9taXNjLnRzIl0sIm5hbWVzIjpbInNldENhcmV0UG9zaXRpb24iLCJlbGVtZW50IiwiY2FyZXRQb3MiLCJzZWxlY3Rpb25TdGFydCIsImZvY3VzIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJzZXRDYXJldFBvc2l0aW9uQXRFbmQiLCJlbmQiLCJ2YWx1ZSIsImxlbmd0aCIsImZvY3VzQ2VsbCIsImlkIiwiZm9jdXNUaW1lb3V0Iiwic2Nyb2xsVG8iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciIsImJsb2NrIiwiaW5saW5lIiwic2V0VGltZW91dCIsImdldFJvd0NvbHVtbkZyb21JZCIsImN1cnJlbnRJZEFyciIsInNwbGl0Iiwicm93IiwiTnVtYmVyIiwicGFyc2VJbnQiLCJjb2x1bW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxJQUFNQSxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUNDLE9BQUQsRUFBZUMsUUFBZixFQUFvQztBQUNsRTtBQUNBLE1BQUlELE9BQU8sQ0FBQ0UsY0FBUixJQUEwQkYsT0FBTyxDQUFDRSxjQUFSLEtBQTJCLENBQXpELEVBQTREO0FBQzFERixJQUFBQSxPQUFPLENBQUNHLEtBQVI7QUFDQUgsSUFBQUEsT0FBTyxDQUFDSSxpQkFBUixDQUEwQkgsUUFBMUIsRUFBb0NBLFFBQXBDO0FBQ0EsV0FBTyxJQUFQO0FBQ0Q7O0FBQ0QsU0FBTyxLQUFQO0FBQ0QsQ0FSTTs7OztBQVVBLElBQU1JLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ0wsT0FBRCxFQUErQjtBQUNsRSxNQUFNTSxHQUFHLEdBQUdOLE9BQU8sQ0FBQ08sS0FBUixDQUFjQyxNQUExQjtBQUNBVCxFQUFBQSxnQkFBZ0IsQ0FBQ0MsT0FBRCxFQUFVTSxHQUFWLENBQWhCO0FBQ0QsQ0FITTs7OztBQUtBLElBQU1HLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNDLEVBQUQsRUFBcUU7QUFBQSxNQUF4REMsWUFBd0QsdUVBQWpDLENBQWlDO0FBQUEsTUFBOUJDLFFBQThCLHVFQUFWLEtBQVU7QUFDNUYsTUFBTVosT0FBTyxHQUFHYSxRQUFRLENBQUNDLGNBQVQsQ0FBd0JKLEVBQXhCLENBQWhCOztBQUNBLE1BQUlWLE9BQUosRUFBYTtBQUNYWSxJQUFBQSxRQUFRLElBQUlaLE9BQU8sQ0FBQ2UsY0FBUixDQUF1QjtBQUFDQyxNQUFBQSxRQUFRLEVBQUUsUUFBWDtBQUFxQkMsTUFBQUEsS0FBSyxFQUFFLEtBQTVCO0FBQW1DQyxNQUFBQSxNQUFNLEVBQUU7QUFBM0MsS0FBdkIsQ0FBWjtBQUNBQyxJQUFBQSxVQUFVLENBQUMsWUFBTTtBQUNmbkIsTUFBQUEsT0FBTyxDQUFDRyxLQUFSO0FBQ0QsS0FGUyxFQUVQUSxZQUZPLENBQVY7QUFHRDtBQUNGLENBUk07Ozs7QUFVQSxJQUFNUyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLENBQUNWLEVBQUQsRUFBZ0I7QUFDaEQsTUFBTVcsWUFBc0IsR0FBR1gsRUFBRSxDQUFDWSxLQUFILENBQVMsR0FBVCxDQUEvQjtBQUNBLE1BQU1DLEdBQUcsR0FBR0MsTUFBTSxDQUFDQyxRQUFQLENBQWdCSixZQUFZLENBQUMsQ0FBRCxDQUE1QixDQUFaO0FBQ0EsTUFBTUssTUFBTSxHQUFHRixNQUFNLENBQUNDLFFBQVAsQ0FBZ0JKLFlBQVksQ0FBQyxDQUFELENBQTVCLENBQWY7QUFDQSxTQUFPO0FBQ0xFLElBQUFBLEdBQUcsRUFBSEEsR0FESztBQUVMRyxJQUFBQSxNQUFNLEVBQU5BO0FBRkssR0FBUDtBQUlELENBUk0iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc2V0Q2FyZXRQb3NpdGlvbiA9IChlbGVtZW50OiBhbnksIGNhcmV0UG9zOiBudW1iZXIpID0+IHtcbiAgLy8gKGVsLnNlbGVjdGlvblN0YXJ0ID09PSAwIGFkZGVkIGZvciBGaXJlZm94IGJ1ZylcbiAgaWYgKGVsZW1lbnQuc2VsZWN0aW9uU3RhcnQgfHwgZWxlbWVudC5zZWxlY3Rpb25TdGFydCA9PT0gMCkge1xuICAgIGVsZW1lbnQuZm9jdXMoKTtcbiAgICBlbGVtZW50LnNldFNlbGVjdGlvblJhbmdlKGNhcmV0UG9zLCBjYXJldFBvcyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgY29uc3Qgc2V0Q2FyZXRQb3NpdGlvbkF0RW5kID0gKGVsZW1lbnQ6IEhUTUxJbnB1dEVsZW1lbnQpID0+IHtcbiAgY29uc3QgZW5kID0gZWxlbWVudC52YWx1ZS5sZW5ndGg7XG4gIHNldENhcmV0UG9zaXRpb24oZWxlbWVudCwgZW5kKTtcbn07XG5cbmV4cG9ydCBjb25zdCBmb2N1c0NlbGwgPSAoaWQ6IHN0cmluZywgZm9jdXNUaW1lb3V0OiBudW1iZXIgPSAxLCBzY3JvbGxUbzogYm9vbGVhbiA9IGZhbHNlKSA9PiB7XG4gIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gIGlmIChlbGVtZW50KSB7XG4gICAgc2Nyb2xsVG8gJiYgZWxlbWVudC5zY3JvbGxJbnRvVmlldyh7YmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2VuZCcsIGlubGluZTogJ25lYXJlc3QnfSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBlbGVtZW50LmZvY3VzKCk7XG4gICAgfSwgZm9jdXNUaW1lb3V0KVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBnZXRSb3dDb2x1bW5Gcm9tSWQgPSAoaWQ6IHN0cmluZykgPT4ge1xuICBjb25zdCBjdXJyZW50SWRBcnI6IHN0cmluZ1tdID0gaWQuc3BsaXQoJyAnKTtcbiAgY29uc3Qgcm93ID0gTnVtYmVyLnBhcnNlSW50KGN1cnJlbnRJZEFyclsxXSk7XG4gIGNvbnN0IGNvbHVtbiA9IE51bWJlci5wYXJzZUludChjdXJyZW50SWRBcnJbM10pO1xuICByZXR1cm4ge1xuICAgIHJvdyxcbiAgICBjb2x1bW5cbiAgfVxufSJdfQ==